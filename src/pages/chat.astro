---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Chat">
    <div class="flex flex-col h-screen bg-white">
        <div class="flex-1 overflow-y-auto p-4 space-y-4" id="chat-messages">
            <!-- Messages will be dynamically added here -->
        </div>
        <div class="border-t bg-white p-4 fixed bottom-0 left-0 right-0">
            <form id="chat-form" class="flex items-center space-x-2 max-w-4xl mx-auto">
                <input
                    id="chat-input"
                    type="text"
                    class="flex-1 bg-gray-100 border-none text-gray-900 text-sm rounded-full focus:ring-2 focus:ring-blue-500 block w-full px-4 py-2"
                    placeholder="Type your message..."
                    required
                />
                <button
                    type="submit"
                    class="text-blue-600 hover:text-blue-700 focus:outline-none font-medium rounded-full text-sm px-4 py-2"
                >
                    Send
                </button>
            </form>
        </div>
    </div>
</Layout>

<script>
    const chatMessages = document.getElementById('chat-messages');
    const chatForm = document.getElementById('chat-form');
    const chatInput = document.getElementById('chat-input') as HTMLInputElement;

    function addMessage(sender: string, message: string) {
        const messageElement = document.createElement('div');
        messageElement.className = `flex ${sender === 'user' ? 'justify-end' : 'justify-start'}`;
        
        const innerElement = document.createElement('div');
        innerElement.className = `${sender === 'user' ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700'} rounded-2xl py-2 px-4 max-w-[70%]`;
        innerElement.textContent = message;
        
        messageElement.appendChild(innerElement);
        chatMessages?.appendChild(messageElement);
        chatMessages?.scrollTo(0, chatMessages.scrollHeight);
    }

    chatForm?.addEventListener('submit', (e) => {
        e.preventDefault();
        const message = chatInput.value.trim();
        if (message) {
            addMessage('user', message);
            chatInput.value = '';
            
            // Simulate AI response (replace with actual API call)
            setTimeout(() => {
                addMessage('ai', `Echo: ${message}`);
            }, 1000);
        }
    });

    // Add initial message
    addMessage('ai', 'Hello! How can I assist you today?');
</script>