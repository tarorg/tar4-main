---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Tar - AI Chat">
    <div class="flex flex-col h-screen bg-white">
        <div id="messages-container" class="flex-grow overflow-y-auto p-4 pb-20">
            <!-- Chat messages will be displayed here -->
        </div>

        <div class="fixed bottom-0 left-0 right-0 border-t bg-white p-4">
            <form id="chat-form" class="flex items-center space-x-2 max-w-2xl mx-auto">
                <input
                    id="user-input"
                    class="flex-grow h-10 rounded-md border border-[#e5e7eb] px-3 py-2 text-sm placeholder-[#6b7280] focus:outline-none focus:ring-2 focus:ring-[#9ca3af] disabled:cursor-not-allowed disabled:opacity-50 text-[#030712] focus-visible:ring-offset-2"
                    placeholder="Type your message" value="">
                <button
                    class="inline-flex items-center justify-center rounded-md text-sm font-medium text-[#f9fafb] disabled:pointer-events-none disabled:opacity-50 bg-black hover:bg-[#111827E6] h-10 px-4 py-2">
                    Send
                </button>
            </form>
        </div>
    </div>
</Layout>

<script>
    const messagesContainer = document.getElementById('messages-container');
    const chatForm = document.getElementById('chat-form');
    const userInput = document.getElementById('user-input') as HTMLInputElement;

    if (chatForm && messagesContainer && userInput) {
        chatForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const message = userInput.value.trim();
            if (message) {
                addMessage('user', message);
                userInput.value = '';
                
                // TODO: Replace this with actual AI API call
                const aiResponse = await simulateAIResponse(message);
                addMessage('ai', aiResponse);
            }
        });

        function addMessage(sender: 'user' | 'ai', text: string) {
            const messageElement = document.createElement('div');
            messageElement.className = 'flex gap-3 my-4 text-gray-600 text-sm flex-1';
            
            const avatarSvg = sender === 'user' 
                ? '<svg stroke="none" fill="black" stroke-width="0" viewBox="0 0 16 16" height="20" width="20" xmlns="http://www.w3.org/2000/svg"><path d="M8 8a3 3 0 1 0 0-6 3 3 0 0 0 0 6Zm2-3a2 2 0 1 1-4 0 2 2 0 0 1 4 0Zm4 8c0 1-1 1-1 1H3s-1 0-1-1 1-4 6-4 6 3 6 4Zm-1-.004c-.001-.246-.154-.986-.832-1.664C11.516 10.68 10.289 10 8 10c-2.29 0-3.516.68-4.168 1.332-.678.678-.83 1.418-.832 1.664h10Z"></path></svg>'
                : '<svg stroke="none" fill="black" stroke-width="1.5" viewBox="0 0 24 24" aria-hidden="true" height="20" width="20" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" d="M9.813 15.904L9 18.75l-.813-2.846a4.5 4.5 0 00-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 003.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 003.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 00-3.09 3.09zM18.259 8.715L18 9.75l-.259-1.035a3.375 3.375 0 00-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 002.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 002.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 00-2.456 2.456zM16.894 20.567L16.5 21.75l-.394-1.183a2.25 2.25 0 00-1.423-1.423L13.5 18.75l1.183-.394a2.25 2.25 0 001.423-1.423l.394-1.183.394 1.183a2.25 2.25 0 001.423 1.423l1.183.394-1.183.394a2.25 2.25 0 00-1.423 1.423z"></path></svg>';

            messageElement.innerHTML = `
                <span class="relative flex shrink-0 overflow-hidden rounded-full w-8 h-8">
                    <div class="rounded-full bg-gray-100 border p-1">${avatarSvg}</div>
                </span>
                <p class="leading-relaxed"><span class="block font-bold text-gray-700">${sender === 'user' ? 'You' : 'AI'} </span>${text}</p>
            `;
            
            if (messagesContainer) {
                messagesContainer.appendChild(messageElement);
                messagesContainer.scrollTop = messagesContainer.scrollHeight;
            }
        }

        // Simulated AI response (replace with actual API call)
        async function simulateAIResponse(message: string) {
            await new Promise(resolve => setTimeout(resolve, 1000));
            return `This is a simulated response to: "${message}"`;
        }

        // Add initial AI message
        addMessage('ai', 'Hi, how can I help you today?');
    }
</script>